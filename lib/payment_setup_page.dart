import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter_stripe/flutter_stripe.dart';
import 'trainer_home_page.dart';

class PaymentSetupPage extends StatefulWidget {
  const PaymentSetupPage({super.key});

  @override
  PaymentSetupPageState createState() => PaymentSetupPageState();
}

class PaymentSetupPageState extends State<PaymentSetupPage> {
  bool _isProcessing = false;

  // This function simulates a payment flow using Stripe's PaymentSheet.
  // In a real app, you'd call your backend to create a PaymentIntent and get its clientSecret.
  Future<void> _processStripePayment() async {
    if (!mounted) return;

    setState(() {
      _isProcessing = true;
    });

    try {
      // Replace this dummy client secret with the one generated by your backend.
      const String clientSecret =
          "pi_3NXXXxXXXXXXXXXXXXXXXX_secret_XXXXXXXXXXXXXXXX";

      // Initialize the payment sheet.
      await Stripe.instance.initPaymentSheet(
        paymentSheetParameters: SetupPaymentSheetParameters(
          paymentIntentClientSecret: clientSecret,
          merchantDisplayName: 'Your App Name',
          style: ThemeMode.light,
        ),
      );

      // Present the payment sheet to the user.
      await Stripe.instance.presentPaymentSheet();

      // If the payment is successful, update Firestore.
      final User? user = FirebaseAuth.instance.currentUser;
      if (user != null) {
        await FirebaseFirestore.instance
            .collection("trainer_profiles")
            .doc(user.uid)
            .update({"paymentCompleted": true});
      }

      // Show success message.
      if (!mounted) return;
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text("Payment Successful.")),
      );

      // Navigate to TrainerHomePage.
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(
          builder: (context) =>
              TrainerHomePage(showProfileCompleteMessage: true),
        ),
      );
    } catch (e) {
      debugPrint("‚ùå Payment failed: $e");
      if (!mounted) return;
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text("Payment Failed. Please try again.")),
      );
    } finally {
      if (mounted) {
        setState(() {
          _isProcessing = false;
        });
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Payment Setup"),
        backgroundColor: Colors.lightBlue,
      ),
      body: Center(
        child: _isProcessing
            ? const CircularProgressIndicator()
            : Padding(
                padding: const EdgeInsets.all(16.0),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    const Text(
                      "Please complete your payment to continue.\n\n"
                      "A Stripe PaymentSheet will be displayed for test payment processing.",
                      textAlign: TextAlign.center,
                      style: TextStyle(fontSize: 16),
                    ),
                    const SizedBox(height: 24),
                    ElevatedButton(
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.lightBlue,
                        foregroundColor: Colors.white,
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(30.0),
                        ),
                      ),
                      onPressed: _processStripePayment,
                      child: const Text("Complete Payment"),
                    ),
                  ],
                ),
              ),
      ),
    );
  }
}
